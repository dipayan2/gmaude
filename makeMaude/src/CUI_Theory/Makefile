# Makefile.in generated by automake 1.16.5 from Makefile.am.
# src/CUI_Theory/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2021 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/maude
pkgincludedir = $(includedir)/maude
pkglibdir = $(libdir)/maude
pkglibexecdir = $(libexecdir)/maude
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = src/CUI_Theory
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_have_poll.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libCUI_Theory_a_AR = $(AR) $(ARFLAGS)
libCUI_Theory_a_LIBADD =
am_libCUI_Theory_a_OBJECTS = libCUI_Theory_a-CUI_Symbol.$(OBJEXT) \
	libCUI_Theory_a-CUI_DagNode.$(OBJEXT) \
	libCUI_Theory_a-CUI_DagArgumentIterator.$(OBJEXT) \
	libCUI_Theory_a-CUI_RhsAutomaton.$(OBJEXT) \
	libCUI_Theory_a-CUI_Term.$(OBJEXT) \
	libCUI_Theory_a-CUI_ArgumentIterator.$(OBJEXT) \
	libCUI_Theory_a-CUI_UnificationSubproblem.$(OBJEXT) \
	libCUI_Theory_a-CUI_UnificationSubproblem2.$(OBJEXT) \
	libCUI_Theory_a-CUI_LhsAutomaton.$(OBJEXT)
libCUI_Theory_a_OBJECTS = $(am_libCUI_Theory_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_Term.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po \
	./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libCUI_Theory_a_SOURCES)
DIST_SOURCES = $(libCUI_Theory_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs ChangeLog
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} '/home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} '/home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/missing' autoconf
AUTOHEADER = ${SHELL} '/home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/missing' autoheader
AUTOMAKE = ${SHELL} '/home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/missing' automake-1.16
AWK = mawk
BISON = bison
BUDDY_LIB = -lbdd
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -Wall -O2 -fomit-frame-pointer -fforce-addr -mpreferred-stack-boundary=4 
CPPFLAGS = 
CSCOPE = cscope
CTAGS = ctags
CVC4_LIB = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -Wall -O2 -fomit-frame-pointer -fforce-addr -mpreferred-stack-boundary=4 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
ETAGS = etags
EXEEXT = 
FLEX = flex
GCC_LIBS = 
GMP_LIBS = -lgmpxx -lgmp
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBSIGSEGV_LIB = -lsigsegv
LTLIBOBJS = 
MAKEINFO = ${SHELL} '/home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/missing' makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = maude
PACKAGE_BUGREPORT = maude-bugs@lists.cs.illinois.edu
PACKAGE_NAME = Maude
PACKAGE_STRING = Maude 3.5beta
PACKAGE_TARNAME = maude
PACKAGE_URL = 
PACKAGE_VERSION = 3.5beta
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
TECLA_LIBS = -ltecla
VERSION = 3.5beta
YICES2_LIB = -lyices
abs_builddir = /home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/src/CUI_Theory
abs_srcdir = /home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/src/CUI_Theory
abs_top_builddir = /home/dipayan2/Desktop/MAUDE/gmaude/makeMaude
abs_top_srcdir = /home/dipayan2/Desktop/MAUDE/gmaude/makeMaude
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dipayan2/Desktop/MAUDE/gmaude/makeMaude/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = libCUI_Theory.a
libCUI_Theory_a_CPPFLAGS = \
	-I$(top_srcdir)/src/Utility \
	-I$(top_srcdir)/src/Interface \
	-I$(top_srcdir)/src/Core \
	-I$(top_srcdir)/src/Variable \
	-I$(top_srcdir)/src/FullCompiler

libCUI_Theory_a_SOURCES = \
	CUI_Symbol.cc \
	CUI_DagNode.cc \
	CUI_DagArgumentIterator.cc \
	CUI_RhsAutomaton.cc \
	CUI_Term.cc \
	CUI_ArgumentIterator.cc \
	CUI_UnificationSubproblem.cc \
	CUI_UnificationSubproblem2.cc \
	CUI_LhsAutomaton.cc

EXTRA_DIST = \
	CUI_LhsCompiler.cc \
	CUI_Matcher.cc

noinst_HEADERS = \
	CUI_ArgumentIterator.hh \
	CUI_DagArgumentIterator.hh \
	CUI_DagNode.hh \
	CUI_LhsAutomaton.hh \
	CUI_RhsAutomaton.hh \
	CUI_Symbol.hh \
	CUI_Term.hh \
	CUI_UnificationSubproblem.hh \
	CUI_UnificationSubproblem2.hh \
	CUI_Theory.hh

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/CUI_Theory/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/CUI_Theory/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libCUI_Theory.a: $(libCUI_Theory_a_OBJECTS) $(libCUI_Theory_a_DEPENDENCIES) $(EXTRA_libCUI_Theory_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libCUI_Theory.a
	$(AM_V_AR)$(libCUI_Theory_a_AR) libCUI_Theory.a $(libCUI_Theory_a_OBJECTS) $(libCUI_Theory_a_LIBADD)
	$(AM_V_at)$(RANLIB) libCUI_Theory.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_Term.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po # am--include-marker
include ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libCUI_Theory_a-CUI_Symbol.o: CUI_Symbol.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_Symbol.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Tpo -c -o libCUI_Theory_a-CUI_Symbol.o `test -f 'CUI_Symbol.cc' || echo '$(srcdir)/'`CUI_Symbol.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po
#	$(AM_V_CXX)source='CUI_Symbol.cc' object='libCUI_Theory_a-CUI_Symbol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_Symbol.o `test -f 'CUI_Symbol.cc' || echo '$(srcdir)/'`CUI_Symbol.cc

libCUI_Theory_a-CUI_Symbol.obj: CUI_Symbol.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_Symbol.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Tpo -c -o libCUI_Theory_a-CUI_Symbol.obj `if test -f 'CUI_Symbol.cc'; then $(CYGPATH_W) 'CUI_Symbol.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_Symbol.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po
#	$(AM_V_CXX)source='CUI_Symbol.cc' object='libCUI_Theory_a-CUI_Symbol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_Symbol.obj `if test -f 'CUI_Symbol.cc'; then $(CYGPATH_W) 'CUI_Symbol.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_Symbol.cc'; fi`

libCUI_Theory_a-CUI_DagNode.o: CUI_DagNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_DagNode.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Tpo -c -o libCUI_Theory_a-CUI_DagNode.o `test -f 'CUI_DagNode.cc' || echo '$(srcdir)/'`CUI_DagNode.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po
#	$(AM_V_CXX)source='CUI_DagNode.cc' object='libCUI_Theory_a-CUI_DagNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_DagNode.o `test -f 'CUI_DagNode.cc' || echo '$(srcdir)/'`CUI_DagNode.cc

libCUI_Theory_a-CUI_DagNode.obj: CUI_DagNode.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_DagNode.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Tpo -c -o libCUI_Theory_a-CUI_DagNode.obj `if test -f 'CUI_DagNode.cc'; then $(CYGPATH_W) 'CUI_DagNode.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_DagNode.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po
#	$(AM_V_CXX)source='CUI_DagNode.cc' object='libCUI_Theory_a-CUI_DagNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_DagNode.obj `if test -f 'CUI_DagNode.cc'; then $(CYGPATH_W) 'CUI_DagNode.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_DagNode.cc'; fi`

libCUI_Theory_a-CUI_DagArgumentIterator.o: CUI_DagArgumentIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_DagArgumentIterator.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Tpo -c -o libCUI_Theory_a-CUI_DagArgumentIterator.o `test -f 'CUI_DagArgumentIterator.cc' || echo '$(srcdir)/'`CUI_DagArgumentIterator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po
#	$(AM_V_CXX)source='CUI_DagArgumentIterator.cc' object='libCUI_Theory_a-CUI_DagArgumentIterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_DagArgumentIterator.o `test -f 'CUI_DagArgumentIterator.cc' || echo '$(srcdir)/'`CUI_DagArgumentIterator.cc

libCUI_Theory_a-CUI_DagArgumentIterator.obj: CUI_DagArgumentIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_DagArgumentIterator.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Tpo -c -o libCUI_Theory_a-CUI_DagArgumentIterator.obj `if test -f 'CUI_DagArgumentIterator.cc'; then $(CYGPATH_W) 'CUI_DagArgumentIterator.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_DagArgumentIterator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po
#	$(AM_V_CXX)source='CUI_DagArgumentIterator.cc' object='libCUI_Theory_a-CUI_DagArgumentIterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_DagArgumentIterator.obj `if test -f 'CUI_DagArgumentIterator.cc'; then $(CYGPATH_W) 'CUI_DagArgumentIterator.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_DagArgumentIterator.cc'; fi`

libCUI_Theory_a-CUI_RhsAutomaton.o: CUI_RhsAutomaton.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_RhsAutomaton.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Tpo -c -o libCUI_Theory_a-CUI_RhsAutomaton.o `test -f 'CUI_RhsAutomaton.cc' || echo '$(srcdir)/'`CUI_RhsAutomaton.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po
#	$(AM_V_CXX)source='CUI_RhsAutomaton.cc' object='libCUI_Theory_a-CUI_RhsAutomaton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_RhsAutomaton.o `test -f 'CUI_RhsAutomaton.cc' || echo '$(srcdir)/'`CUI_RhsAutomaton.cc

libCUI_Theory_a-CUI_RhsAutomaton.obj: CUI_RhsAutomaton.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_RhsAutomaton.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Tpo -c -o libCUI_Theory_a-CUI_RhsAutomaton.obj `if test -f 'CUI_RhsAutomaton.cc'; then $(CYGPATH_W) 'CUI_RhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_RhsAutomaton.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po
#	$(AM_V_CXX)source='CUI_RhsAutomaton.cc' object='libCUI_Theory_a-CUI_RhsAutomaton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_RhsAutomaton.obj `if test -f 'CUI_RhsAutomaton.cc'; then $(CYGPATH_W) 'CUI_RhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_RhsAutomaton.cc'; fi`

libCUI_Theory_a-CUI_Term.o: CUI_Term.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_Term.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_Term.Tpo -c -o libCUI_Theory_a-CUI_Term.o `test -f 'CUI_Term.cc' || echo '$(srcdir)/'`CUI_Term.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_Term.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_Term.Po
#	$(AM_V_CXX)source='CUI_Term.cc' object='libCUI_Theory_a-CUI_Term.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_Term.o `test -f 'CUI_Term.cc' || echo '$(srcdir)/'`CUI_Term.cc

libCUI_Theory_a-CUI_Term.obj: CUI_Term.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_Term.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_Term.Tpo -c -o libCUI_Theory_a-CUI_Term.obj `if test -f 'CUI_Term.cc'; then $(CYGPATH_W) 'CUI_Term.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_Term.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_Term.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_Term.Po
#	$(AM_V_CXX)source='CUI_Term.cc' object='libCUI_Theory_a-CUI_Term.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_Term.obj `if test -f 'CUI_Term.cc'; then $(CYGPATH_W) 'CUI_Term.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_Term.cc'; fi`

libCUI_Theory_a-CUI_ArgumentIterator.o: CUI_ArgumentIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_ArgumentIterator.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Tpo -c -o libCUI_Theory_a-CUI_ArgumentIterator.o `test -f 'CUI_ArgumentIterator.cc' || echo '$(srcdir)/'`CUI_ArgumentIterator.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po
#	$(AM_V_CXX)source='CUI_ArgumentIterator.cc' object='libCUI_Theory_a-CUI_ArgumentIterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_ArgumentIterator.o `test -f 'CUI_ArgumentIterator.cc' || echo '$(srcdir)/'`CUI_ArgumentIterator.cc

libCUI_Theory_a-CUI_ArgumentIterator.obj: CUI_ArgumentIterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_ArgumentIterator.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Tpo -c -o libCUI_Theory_a-CUI_ArgumentIterator.obj `if test -f 'CUI_ArgumentIterator.cc'; then $(CYGPATH_W) 'CUI_ArgumentIterator.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_ArgumentIterator.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po
#	$(AM_V_CXX)source='CUI_ArgumentIterator.cc' object='libCUI_Theory_a-CUI_ArgumentIterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_ArgumentIterator.obj `if test -f 'CUI_ArgumentIterator.cc'; then $(CYGPATH_W) 'CUI_ArgumentIterator.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_ArgumentIterator.cc'; fi`

libCUI_Theory_a-CUI_UnificationSubproblem.o: CUI_UnificationSubproblem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_UnificationSubproblem.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Tpo -c -o libCUI_Theory_a-CUI_UnificationSubproblem.o `test -f 'CUI_UnificationSubproblem.cc' || echo '$(srcdir)/'`CUI_UnificationSubproblem.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po
#	$(AM_V_CXX)source='CUI_UnificationSubproblem.cc' object='libCUI_Theory_a-CUI_UnificationSubproblem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_UnificationSubproblem.o `test -f 'CUI_UnificationSubproblem.cc' || echo '$(srcdir)/'`CUI_UnificationSubproblem.cc

libCUI_Theory_a-CUI_UnificationSubproblem.obj: CUI_UnificationSubproblem.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_UnificationSubproblem.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Tpo -c -o libCUI_Theory_a-CUI_UnificationSubproblem.obj `if test -f 'CUI_UnificationSubproblem.cc'; then $(CYGPATH_W) 'CUI_UnificationSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_UnificationSubproblem.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po
#	$(AM_V_CXX)source='CUI_UnificationSubproblem.cc' object='libCUI_Theory_a-CUI_UnificationSubproblem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_UnificationSubproblem.obj `if test -f 'CUI_UnificationSubproblem.cc'; then $(CYGPATH_W) 'CUI_UnificationSubproblem.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_UnificationSubproblem.cc'; fi`

libCUI_Theory_a-CUI_UnificationSubproblem2.o: CUI_UnificationSubproblem2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_UnificationSubproblem2.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Tpo -c -o libCUI_Theory_a-CUI_UnificationSubproblem2.o `test -f 'CUI_UnificationSubproblem2.cc' || echo '$(srcdir)/'`CUI_UnificationSubproblem2.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po
#	$(AM_V_CXX)source='CUI_UnificationSubproblem2.cc' object='libCUI_Theory_a-CUI_UnificationSubproblem2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_UnificationSubproblem2.o `test -f 'CUI_UnificationSubproblem2.cc' || echo '$(srcdir)/'`CUI_UnificationSubproblem2.cc

libCUI_Theory_a-CUI_UnificationSubproblem2.obj: CUI_UnificationSubproblem2.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_UnificationSubproblem2.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Tpo -c -o libCUI_Theory_a-CUI_UnificationSubproblem2.obj `if test -f 'CUI_UnificationSubproblem2.cc'; then $(CYGPATH_W) 'CUI_UnificationSubproblem2.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_UnificationSubproblem2.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po
#	$(AM_V_CXX)source='CUI_UnificationSubproblem2.cc' object='libCUI_Theory_a-CUI_UnificationSubproblem2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_UnificationSubproblem2.obj `if test -f 'CUI_UnificationSubproblem2.cc'; then $(CYGPATH_W) 'CUI_UnificationSubproblem2.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_UnificationSubproblem2.cc'; fi`

libCUI_Theory_a-CUI_LhsAutomaton.o: CUI_LhsAutomaton.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_LhsAutomaton.o -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Tpo -c -o libCUI_Theory_a-CUI_LhsAutomaton.o `test -f 'CUI_LhsAutomaton.cc' || echo '$(srcdir)/'`CUI_LhsAutomaton.cc
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po
#	$(AM_V_CXX)source='CUI_LhsAutomaton.cc' object='libCUI_Theory_a-CUI_LhsAutomaton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_LhsAutomaton.o `test -f 'CUI_LhsAutomaton.cc' || echo '$(srcdir)/'`CUI_LhsAutomaton.cc

libCUI_Theory_a-CUI_LhsAutomaton.obj: CUI_LhsAutomaton.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libCUI_Theory_a-CUI_LhsAutomaton.obj -MD -MP -MF $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Tpo -c -o libCUI_Theory_a-CUI_LhsAutomaton.obj `if test -f 'CUI_LhsAutomaton.cc'; then $(CYGPATH_W) 'CUI_LhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_LhsAutomaton.cc'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Tpo $(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po
#	$(AM_V_CXX)source='CUI_LhsAutomaton.cc' object='libCUI_Theory_a-CUI_LhsAutomaton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libCUI_Theory_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libCUI_Theory_a-CUI_LhsAutomaton.obj `if test -f 'CUI_LhsAutomaton.cc'; then $(CYGPATH_W) 'CUI_LhsAutomaton.cc'; else $(CYGPATH_W) '$(srcdir)/CUI_LhsAutomaton.cc'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_Term.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_ArgumentIterator.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_DagArgumentIterator.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_DagNode.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_LhsAutomaton.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_RhsAutomaton.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_Symbol.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_Term.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem.Po
	-rm -f ./$(DEPDIR)/libCUI_Theory_a-CUI_UnificationSubproblem2.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-noinstLIBRARIES cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
