==========================================
reduce in SORTABLE-LIST-TEST : size(gen(100)) .
rewrites: 504
result NzNat: 100
==========================================
reduce in SORTABLE-LIST-TEST : sort(gen(100)) .
rewrites: 2627
result NeList{Nat<}: 0 0 0 0 0 0 0 0 0 0 1 1 1 1 4 4 4 4 9 9 9 9 16 16 16 16 21
    21 21 21 24 24 24 24 25 25 25 25 25 25 25 25 25 25 29 29 29 29 36 36 36 36
    41 41 41 41 44 44 44 44 49 49 49 49 56 56 56 56 61 61 61 61 64 64 64 64 69
    69 69 69 76 76 76 76 81 81 81 81 84 84 84 84 89 89 89 89 96 96 96 96
==========================================
reduce in SORTABLE-LIST-TEST : reverse(sort(gen(100))) .
rewrites: 2729
result NeList{Nat<}: 96 96 96 96 89 89 89 89 84 84 84 84 81 81 81 81 76 76 76
    76 69 69 69 69 64 64 64 64 61 61 61 61 56 56 56 56 49 49 49 49 44 44 44 44
    41 41 41 41 36 36 36 36 29 29 29 29 25 25 25 25 25 25 25 25 25 25 24 24 24
    24 21 21 21 21 16 16 16 16 9 9 9 9 4 4 4 4 1 1 1 1 0 0 0 0 0 0 0 0 0 0
==========================================
reduce in SORTABLE-LIST-TEST : occurs(5, gen(100)) .
rewrites: 603
result Bool: false
==========================================
reduce in SORTABLE-LIST-TEST : occurs(24, gen(100)) .
rewrites: 356
result Bool: true
==========================================
reduce in SET-TEST : intersection(gen(100, 13), gen(100, 4)) .
rewrites: 906
result NeSet{Nat}: 52, 104, 156, 208, 260, 312, 364
==========================================
reduce in SET-TEST : union(gen(100, 13), gen(100, 4)) .
rewrites: 606
result NeSet{Nat}: 4, 8, 12, 13, 16, 20, 24, 26, 28, 32, 36, 39, 40, 44, 48,
    52, 56, 60, 64, 65, 68, 72, 76, 78, 80, 84, 88, 91, 92, 96, 100, 104, 108,
    112, 116, 117, 120, 124, 128, 130, 132, 136, 140, 143, 144, 148, 152, 156,
    160, 164, 168, 169, 172, 176, 180, 182, 184, 188, 192, 195, 196, 200, 204,
    208, 212, 216, 220, 221, 224, 228, 232, 234, 236, 240, 244, 247, 248, 252,
    256, 260, 264, 268, 272, 273, 276, 280, 284, 286, 288, 292, 296, 299, 300,
    304, 308, 312, 316, 320, 324, 325, 328, 332, 336, 338, 340, 344, 348, 351,
    352, 356, 360, 364, 368, 372, 376, 377, 380, 384, 388, 390, 392, 396, 400,
    403, 416, 429, 442, 455, 468, 481, 494, 507, 520, 533, 546, 559, 572, 585,
    598, 611, 624, 637, 650, 663, 676, 689, 702, 715, 728, 741, 754, 767, 780,
    793, 806, 819, 832, 845, 858, 871, 884, 897, 910, 923, 936, 949, 962, 975,
    988, 1001, 1014, 1027, 1040, 1053, 1066, 1079, 1092, 1105, 1118, 1131,
    1144, 1157, 1170, 1183, 1196, 1209, 1222, 1235, 1248, 1261, 1274, 1287,
    1300
==========================================
reduce in SET-TEST : gen(100, 13) \ gen(100, 52) .
rewrites: 906
result NeSet{Nat}: 13, 26, 39, 65, 78, 91, 117, 130, 143, 169, 182, 195, 221,
    234, 247, 273, 286, 299, 325, 338, 351, 377, 390, 403, 429, 442, 455, 481,
    494, 507, 533, 546, 559, 585, 598, 611, 637, 650, 663, 689, 702, 715, 741,
    754, 767, 793, 806, 819, 845, 858, 871, 897, 910, 923, 949, 962, 975, 1001,
    1014, 1027, 1053, 1066, 1079, 1105, 1118, 1131, 1157, 1170, 1183, 1209,
    1222, 1235, 1261, 1274, 1287
==========================================
reduce in SET-TEST : intersection(gen(100, 13), gen(100, 4)) \ gen(100, 52) .
rewrites: 1231
result Set{Nat}: empty
==========================================
reduce in SET-TEST : | gen(100, 13) | .
rewrites: 504
result NzNat: 100
==========================================
reduce in SET-TEST : delete(3, (4, 3, 5)) .
rewrites: 2
result NeSet{Nat}: 4, 5
==========================================
reduce in SET-TEST : 53 in union(gen(100, 13), gen(100, 4)) .
rewrites: 607
result Bool: false
==========================================
reduce in SET-TEST : 52 in union(gen(100, 13), gen(100, 4)) .
rewrites: 607
result Bool: true
==========================================
reduce in LIST-AND-SET-TEST : gen(100) .
rewrites: 302
result NeList{Nat}: 1 4 9 16 25 36 49 64 81 0 21 44 69 96 25 56 89 24 61 0 41
    84 29 76 25 76 29 84 41 0 61 24 89 56 25 96 69 44 21 0 81 64 49 36 25 16 9
    4 1 0 1 4 9 16 25 36 49 64 81 0 21 44 69 96 25 56 89 24 61 0 41 84 29 76 25
    76 29 84 41 0 61 24 89 56 25 96 69 44 21 0 81 64 49 36 25 16 9 4 1 0
==========================================
reduce in LIST-AND-SET-TEST : makeSet(gen(100)) .
rewrites: 482
result NeSet{Nat}: 0, 1, 4, 9, 16, 21, 24, 25, 29, 36, 41, 44, 49, 56, 61, 64,
    69, 76, 81, 84, 89, 96
==========================================
reduce in LIST-AND-SET-TEST : filter(gen(100), makeSet(gen(10))) .
rewrites: 648
result NeList{Nat}: 1 4 9 16 25 36 49 64 81 0 25 0 25 0 25 0 81 64 49 36 25 16
    9 4 1 0 1 4 9 16 25 36 49 64 81 0 25 0 25 0 25 0 81 64 49 36 25 16 9 4 1 0
==========================================
reduce in LIST-AND-SET-TEST : filterOut(gen(100), makeSet(gen(10))) .
rewrites: 648
result NeList{Nat}: 21 44 69 96 56 89 24 61 41 84 29 76 76 29 84 41 61 24 89 56
    96 69 44 21 21 44 69 96 56 89 24 61 41 84 29 76 76 29 84 41 61 24 89 56 96
    69 44 21
==========================================
reduce in SORTABLE-LIST-AND-SET-TEST : makeList(makeSet(gen(100))) .
rewrites: 781
result NeList{Nat<}: 0 1 4 9 16 21 24 25 29 36 41 44 49 56 61 64 69 76 81 84 89
    96
==========================================
reduce in LIST*-TEST : append(a, b) .
rewrites: 3
result NeList{Nat}: [[1 2 3] [] [3 4 5 6] [[1] []] 2 [1 2 3]]
==========================================
reduce in LIST*-TEST : size(append(a, b)) .
rewrites: 16
result NzNat: 6
==========================================
reduce in LIST*-TEST : reverse(append(a, b)) .
rewrites: 9
result NeList{Nat}: [[1 2 3] 2 [[1] []] [3 4 5 6] [] [1 2 3]]
==========================================
reduce in LIST*-TEST : head(a) .
rewrites: 2
result NeList{Nat}: [1 2 3]
==========================================
reduce in LIST*-TEST : tail(a) .
rewrites: 2
result NeList{Nat}: [[] [3 4 5 6]]
==========================================
reduce in LIST*-TEST : last(a) .
rewrites: 2
result NeList{Nat}: [3 4 5 6]
==========================================
reduce in LIST*-TEST : front(a) .
rewrites: 2
result NeList{Nat}: [[1 2 3] []]
==========================================
reduce in LIST*-TEST : occurs([], a) .
rewrites: 7
result Bool: true
==========================================
reduce in LIST*-TEST : occurs([2 3], a) .
rewrites: 9
result Bool: false
==========================================
reduce in SET*-TEST : zf(0) .
rewrites: 1
result Set{Nat}: {}
==========================================
reduce in SET*-TEST : zf(1) .
rewrites: 3
result NeSet{Nat}: {{}}
==========================================
reduce in SET*-TEST : zf(2) .
rewrites: 5
result NeSet{Nat}: {{}, {{}}}
==========================================
reduce in SET*-TEST : zf(3) .
rewrites: 7
result NeSet{Nat}: {{}, {{}}, {{}, {{}}}}
==========================================
reduce in SET*-TEST : zf(4) .
rewrites: 9
result NeSet{Nat}: {{}, {{}}, {{}, {{}}}, {{}, {{}}, {{}, {{}}}}}
==========================================
reduce in SET*-TEST : | zf(10) | .
rewrites: 42
result NzNat: 10
==========================================
reduce in SET*-TEST : | zf(100) | .
rewrites: 402
result NzNat: 100
==========================================
reduce in SET*-TEST : 2^ zf(4) .
rewrites: 69
result NeSet{Nat}: {{}, {{}}, {{{}}}, {{{}, {{}}}}, {{{}, {{}}, {{}, {{}}}}}, {
    {}, {{}}}, {{}, {{}, {{}}}}, {{}, {{}, {{}}, {{}, {{}}}}}, {{{}}, {{}, {{
    }}}}, {{{}}, {{}, {{}}, {{}, {{}}}}}, {{{}, {{}}}, {{}, {{}}, {{}, {{}}}}},
    {{}, {{}}, {{}, {{}}}}, {{}, {{}}, {{}, {{}}, {{}, {{}}}}}, {{}, {{}, {{
    }}}, {{}, {{}}, {{}, {{}}}}}, {{{}}, {{}, {{}}}, {{}, {{}}, {{}, {{}}}}}, {
    {}, {{}}, {{}, {{}}}, {{}, {{}}, {{}, {{}}}}}}
==========================================
reduce in SET*-TEST : | 2^ zf(9) | .
rewrites: 3093
result NzNat: 512
==========================================
reduce in MAP-TEST : a .
rewrites: 5
result Map{String,Nat}: "one" |-> 1, "three" |-> 3, "two" |-> 2, "zero" |-> 0
==========================================
reduce in MAP-TEST : a["one"] .
rewrites: 8
result NzNat: 1
==========================================
reduce in ARRAY-TEST : gen(100) .
rewrites: 501
result Array{Nat,Nat0}: 1 |-> 1 ; 2 |-> 2 ; 3 |-> 3 ; 4 |-> 4 ; 5 |-> 5 ; 6 |->
    6 ; 7 |-> 7 ; 8 |-> 8 ; 9 |-> 9 ; 11 |-> 1 ; 12 |-> 2 ; 13 |-> 3 ; 14 |-> 4
    ; 15 |-> 5 ; 16 |-> 6 ; 17 |-> 7 ; 18 |-> 8 ; 19 |-> 9 ; 21 |-> 1 ; 22 |->
    2 ; 23 |-> 3 ; 24 |-> 4 ; 25 |-> 5 ; 26 |-> 6 ; 27 |-> 7 ; 28 |-> 8 ; 29
    |-> 9 ; 31 |-> 1 ; 32 |-> 2 ; 33 |-> 3 ; 34 |-> 4 ; 35 |-> 5 ; 36 |-> 6 ;
    37 |-> 7 ; 38 |-> 8 ; 39 |-> 9 ; 41 |-> 1 ; 42 |-> 2 ; 43 |-> 3 ; 44 |-> 4
    ; 45 |-> 5 ; 46 |-> 6 ; 47 |-> 7 ; 48 |-> 8 ; 49 |-> 9 ; 51 |-> 1 ; 52 |->
    2 ; 53 |-> 3 ; 54 |-> 4 ; 55 |-> 5 ; 56 |-> 6 ; 57 |-> 7 ; 58 |-> 8 ; 59
    |-> 9 ; 61 |-> 1 ; 62 |-> 2 ; 63 |-> 3 ; 64 |-> 4 ; 65 |-> 5 ; 66 |-> 6 ;
    67 |-> 7 ; 68 |-> 8 ; 69 |-> 9 ; 71 |-> 1 ; 72 |-> 2 ; 73 |-> 3 ; 74 |-> 4
    ; 75 |-> 5 ; 76 |-> 6 ; 77 |-> 7 ; 78 |-> 8 ; 79 |-> 9 ; 81 |-> 1 ; 82 |->
    2 ; 83 |-> 3 ; 84 |-> 4 ; 85 |-> 5 ; 86 |-> 6 ; 87 |-> 7 ; 88 |-> 8 ; 89
    |-> 9 ; 91 |-> 1 ; 92 |-> 2 ; 93 |-> 3 ; 94 |-> 4 ; 95 |-> 5 ; 96 |-> 6 ;
    97 |-> 7 ; 98 |-> 8 ; 99 |-> 9
==========================================
reduce in ARRAY-TEST : gen(100)[55] .
rewrites: 504
result NzNat: 5
==========================================
reduce in ARRAY-TEST : gen(100)[60] .
rewrites: 502
result Zero: 0
==========================================
reduce in ARRAY-TEST : gen(100)[1000000000000000000000] .
rewrites: 502
result Zero: 0
Bye.
