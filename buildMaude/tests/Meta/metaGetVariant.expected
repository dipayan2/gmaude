==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, (0).Zero) .
rewrites: 3
result Variant: {'_+_['cst1.Elem, '%1:XOR], 
  'X:XOR <- '%1:XOR, '%, (none).Parent, false}
==========================================
reduce in TEST : metaGetVariant(upModule('XOR, false), upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, (0).Zero) .
rewrites: 3
result Variant: {'_+_['cst1.Elem, '%1:XOR], 
  'X:XOR <- '%1:XOR, '%, (none).Parent, false}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '@, (0).Zero) .
rewrites: 3
result Variant: {'_+_['cst1.Elem, '#1:XOR], 
  'X:XOR <- '#1:XOR, '#, (none).Parent, false}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, 1) .
rewrites: 6
result Variant: {'cst1.Elem, 
  'X:XOR <- '0.XOR, '@, (0).Zero, true}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, 2) .
rewrites: 3
result Variant: {'0.XOR, 
  'X:XOR <- 'cst1.Elem, '@, (0).Zero, true}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, 3) .
rewrites: 3
result Variant: {'@1:XOR, 
  'X:XOR <- '_+_['cst1.Elem, '@1:XOR], '@, (0).Zero, false}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + X:XOR), (
    empty).GroundTermList, '#, 4) .
rewrites: 3
result Variant?: noVariant
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst2 + X:XOR), upTerm(a +
    X:XOR), '#, (0).Zero) .
rewrites: 4
result Variant: {'_+_['cst2.Elem, '%1:XOR], 
  'X:XOR <- '%1:XOR, '%, (none).Parent, false}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst2 + X:XOR), upTerm(a +
    X:XOR), '#, 1) .
rewrites: 6
result Variant: {'0.XOR, 
  'X:XOR <- 'cst2.Elem, '@, (0).Zero, true}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst2 + X:XOR), upTerm(a +
    X:XOR), '#, 2) .
rewrites: 4
result Variant: {'@1:XOR, 
  'X:XOR <- '_+_['cst2.Elem, '@1:XOR], '@, (0).Zero, false}
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst2 + X:XOR), upTerm(a +
    X:XOR), '#, 3) .
rewrites: 4
result Variant?: noVariant
==========================================
reduce in TEST : metaGetVariant(['XOR], upTerm(cst1 + %1:XOR), (
    empty).GroundTermList, '#, (0).Zero) .
Warning: unsafe variable name %1:XOR in variant narrowing problem.
rewrites: 3
result Variant?: noVariant
Bye.
